version: '3.4'

services:
  postgres:
    image: postgres:latest
    container_name: template_database
    command: postgres -c 'max_connections=200'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: '!</dev/tcp/db/5432'

  server:
    build: packages/server
    container_name: template_server
    working_dir: /monorepo-react-node-postgres-ts/packages/server
    entrypoint: yarn dev
    ports:
      - 8080:8080
    volumes:
      - $PWD:/monorepo-react-node-postgres-ts
    depends_on:
      - postgres

  web:
    image: node:12.18.3
    container_name: template_web
    working_dir: /monorepo-react-node-postgres-ts/packages/web
    entrypoint: yarn dev
    ports:
      - 4000:4000
    volumes:
      - $PWD:/monorepo-react-node-postgres-ts
    depends_on:
      - server

  nginx:
    image: nginx:latest
    container_name: template_nginx
    ports:
      - 80:80
    environment:
      - NGINX_PORT=80
    command: /bin/bash -c "envsubst < /etc/nginx/conf.d/nginx.template > /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    volumes:
      - ./packages/nginx/.nginx.conf:/etc/nginx/conf.d/nginx.template
    depends_on:
      - server
      - web

volumes:
  postgres_data:
